{"version":3,"sources":["fetchAPI/fetchAPI.js","helpers/convertDate.js","theme/theme.js","assets/images/corona-logo_260x260.png","globals/constants.js","components/Header/Header.style.js","components/Header/Header.js","helpers/localStorage.js","pages/Main/Main.style.js","components/Dropdown/Dropdown.style.js","components/Dropdown/Dropdown.js","components/Loader/Loader.style.js","components/Loader/Loader.js","components/CountryCard/CountryCard.style.js","components/CountryCard/CountryCard.js","components/ShowDataComponent/ShowDataComponent.style.js","components/ShowDataComponent/ShowDataComponent.js","pages/Main/Main.js","index.js"],"names":["coronaURL","process","a","url","method","body","fetchData","JSON","stringify","headers","fetch","response","json","API","getCoronaData","request","convertDate","date","dateAndTime","split","dateData","dateToShow","MAIN_SPACING_VALUE","newCasesBackgroundColor","newCasesTextColor","newDeathBackgroundColor","newDeathTextColor","lightTheme","createMuiTheme","border","borderRadius","base","color","cardBackgroundColor","backgroundColor","textColor","customSpacing","xSmall","small","large","xLarge","logoSize","darkTheme","palette","type","background","paper","FILTER_OPTIONS","checked","name","title","CASE_OPTION","LOCAL_STORAGE","LOGO","src","logo","SHOWDATA_TITLE","useStyles","makeStyles","theme","header","logoIconContainer","display","justifyContent","width","logoTitleWrapper","alignItems","logoWrapper","height","titleWrapper","marginLeft","icon","Header","darkMode","handleDarkMode","classes","AppBar","className","position","Toolbar","alt","Typography","variant","IconButton","onClick","Brightness7","Brightness2","loadState","stateName","serializedState","localStorage","getItem","parse","err","saveState","value","setItem","Error","cursor","minHeight","dropdownContainer","flexDirection","marginTop","padding","dropdownTitleWrapper","textAlign","dropdownWrapper","dropdown","buttonWrapper","Dropdown","countries","handleCountrySelect","handleShow","selectedCountries","checkedIcon","fontSize","Autocomplete","autoHighlight","disableCloseOnSelect","getOptionLabel","option","getOptionSelected","values","multiple","onChange","event","options","renderInput","params","TextField","label","placeholder","renderOption","selected","Checkbox","style","marginRight","Button","disabled","length","e","loaderContainer","Loader","CircularProgress","size","thickness","cardContainer","margin","caseWrapper","dataWrapper","newCasesWrapper","deathDataWrapper","CountryCard","country","filterData","Card","CardContent","map","filter","showDataContainer","showDataTitleWrapper","filtersIconWrapper","cardWrapper","flexFlow","ShowDataComponent","countriesToShow","handleCheckboxChange","FormGroup","row","data","FormControlLabel","control","Tooltip","TransitionComponent","Zoom","Main","useState","setDarkMode","setCountries","coronaData","setCoronaData","setCountriesToShow","isEdit","setIsEdit","isLoading","setIsLoading","filtersFromLocalStorage","filterOptions","index","setFilterData","setSelectedCountries","getData","coronaResponse","slice","Country_text","countriesArray","sortedCountries","sort","b","selectedCountriesFromLocalStorage","useEffect","mappedCountries","find","activeCases","newCases","newDeaths","updateDate","preventDefault","ThemeProvider","Paper","square","newFilters","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1daa9f7.chunk.js","sourcesContent":["const coronaURL = `${process.env.REACT_APP_ROOT_API}${process.env.REACT_APP_PARAMS}${process.env.REACT_APP_RAPIDAPI_KEY}`;\n\nasync function request({ url, method, body }) {\n  const fetchData = body\n    ? {\n        body: JSON.stringify(body) || '',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method,\n      }\n    : {\n        method,\n      };\n\n  const response = await fetch(url, fetchData);\n\n  return response.json();\n}\n\nconst API = {\n  getCoronaData: () => request({ url: coronaURL, method: 'GET' }),\n};\n\nexport default API;\n","export const convertDate = date => {\n  if (date) {\n    const dateAndTime = date.split(' ');\n    const dateData = dateAndTime[0].split('-');\n    const dateToShow = `${dateData[2]}/${dateData[1]}/${dateData[0]}`;\n\n    return `${dateAndTime[1]} ${dateToShow}`;\n  }\n  return date;\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nconst LOGO_SIZE = 40;\nconst MAIN_BORDER_RADIUS_VALUE = 4;\nconst MAIN_SPACING_VALUE = 16;\n\nconst cardBackgroundColorDark = '#2d2d2d';\nconst cardBackgroundColorLight = '#F5F5F5';\nconst headerBackgroundColorDark = '#333333';\nconst headerBackgroundColorLight = '#ffffff';\nconst headerTextColorDark = '#ffffff';\nconst headerTextColorLight = '#191919';\nconst newCasesBackgroundColor = '#FFEEAA';\nconst newCasesTextColor = '#212121';\nconst newDeathBackgroundColor = '#FF0000';\nconst newDeathTextColor = '#ffffff';\nconst paperBackgroundColorDark = '#212121';\n\nexport const lightTheme = createMuiTheme({\n  border: {\n    borderRadius: {\n      base: `${MAIN_BORDER_RADIUS_VALUE}px`,\n    },\n  },\n  color: {\n    cardBackgroundColor: cardBackgroundColorLight,\n    backgroundColor: headerBackgroundColorLight,\n    newCasesBackgroundColor,\n    newCasesTextColor,\n    newDeathBackgroundColor,\n    newDeathTextColor,\n    textColor: headerTextColorLight,\n  },\n  customSpacing: {\n    xSmall: `${MAIN_SPACING_VALUE / 2.66}px`,\n    small: `${MAIN_SPACING_VALUE / 2}px`,\n    base: `${MAIN_SPACING_VALUE}px`,\n    large: `${MAIN_SPACING_VALUE * 2}px`,\n    xLarge: `${MAIN_SPACING_VALUE * 3}px`,\n  },\n  logoSize: `${LOGO_SIZE}px`,\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      paper: paperBackgroundColorDark,\n    },\n  },\n  border: {\n    borderRadius: {\n      base: `${MAIN_BORDER_RADIUS_VALUE}px`,\n    },\n  },\n  color: {\n    cardBackgroundColor: cardBackgroundColorDark,\n    backgroundColor: headerBackgroundColorDark,\n    newCasesBackgroundColor,\n    newCasesTextColor,\n    newDeathBackgroundColor,\n    newDeathTextColor,\n    textColor: headerTextColorDark,\n  },\n  customSpacing: {\n    xSmall: `${MAIN_SPACING_VALUE / 2.66}px`,\n    small: `${MAIN_SPACING_VALUE / 2}px`,\n    base: `${MAIN_SPACING_VALUE}px`,\n    large: `${MAIN_SPACING_VALUE * 2}px`,\n    xLarge: `${MAIN_SPACING_VALUE * 3}px`,\n  },\n  logoSize: `${LOGO_SIZE}px`,\n});\n","export default __webpack_public_path__ + \"static/media/corona-logo_260x260.0d91d905.png\";","import logo from '../assets/images/corona-logo_260x260.png';\n\nexport const DROPDOWN_INPUT_LABEL = 'Countries';\nexport const DROPDOWN_TITLE = 'Select at least one country';\nexport const EDIT_ICON_TOOLTIP_TITLE = 'Edit countries';\nexport const FILTER_OPTIONS = [\n  {\n    checked: true,\n    name: 'newCases',\n    title: 'New cases',\n  },\n  {\n    checked: false,\n    name: 'newDeaths',\n    title: 'New deaths',\n  },\n  {\n    checked: false,\n    name: 'activeCases',\n    title: 'Active cases',\n  },\n  {\n    checked: true,\n    name: 'updateDate',\n    title: 'Update time',\n  },\n];\nexport const CASE_OPTION = {\n  newCases: FILTER_OPTIONS[0].name,\n  newDeaths: FILTER_OPTIONS[1].name,\n  activeCases: FILTER_OPTIONS[2].name,\n  updateDate: FILTER_OPTIONS[3].name,\n};\nexport const LOCAL_STORAGE = {\n  darkMode: 'darkMode',\n  filters: 'filters',\n  selectedCountries: 'selectedCountries',\n};\nexport const LOGO = {\n  src: logo,\n  title: 'logo',\n};\nexport const SHOW_BUTTON_LABEL = 'Save & Show';\nexport const SHOWDATA_TITLE = {\n  single: 'Data for selected country',\n  multi: 'Data for selected countries',\n};\nexport const TITLE = 'Corona Data';\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  header: {\n    backgroundColor: theme.color.backgroundColor,\n    color: theme.color.textColor,\n  },\n  logoIconContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  logoTitleWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  logoWrapper: {\n    display: 'flex',\n  },\n  logo: {\n    height: theme.logoSize,\n    width: theme.logoSize,\n  },\n  titleWrapper: {\n    marginLeft: theme.customSpacing.base,\n  },\n  icon: {\n    color: theme.color.textColor,\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport { Brightness2, Brightness7 } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { LOGO, TITLE } from '../../globals/constants';\nimport { useStyles } from './Header.style';\n\nfunction Header({ darkMode, handleDarkMode }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar className={classes.header} position=\"static\">\n        <Toolbar>\n          <div className={classes.logoIconContainer}>\n            <div className={classes.logoTitleWrapper}>\n              <div className={classes.logoWrapper}>\n                <img alt={LOGO.title} className={classes.logo} src={LOGO.src} />\n              </div>\n              <div className={classes.titleWrapper}>\n                <Typography variant=\"h6\">{TITLE}</Typography>\n              </div>\n            </div>\n            <div>\n              {darkMode ? (\n                <IconButton className={classes.icon} onClick={handleDarkMode}>\n                  <Brightness7 />\n                </IconButton>\n              ) : (\n                <IconButton className={classes.icon} onClick={handleDarkMode}>\n                  <Brightness2 />\n                </IconButton>\n              )}\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  darkMode: PropTypes.bool.isRequired,\n  handleDarkMode: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","export const loadState = stateName => {\n  try {\n    const serializedState = localStorage.getItem(stateName);\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (stateName, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n\n    localStorage.setItem(stateName, serializedState);\n  } catch (err) {\n    throw new Error(\"Can't save changes in local storage\");\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  paper: {\n    cursor: 'default',\n    minHeight: '100vh',\n  },\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  dropdownContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    marginTop: theme.customSpacing.base,\n    padding: `0 ${theme.customSpacing.small} ${theme.customSpacing.large}`,\n  },\n  dropdownTitleWrapper: {\n    textAlign: 'center',\n  },\n  dropdownWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.customSpacing.base,\n    width: '90%',\n    '@media only screen and (min-width: 600px)': {\n      width: '60%',\n    },\n    '@media only screen and (min-width: 768px)': {\n      width: '50%',\n    },\n    '@media only screen and (min-width: 992px)': {\n      width: '40%',\n    },\n  },\n  dropdown: {\n    width: '100%',\n  },\n  buttonWrapper: {\n    marginTop: theme.customSpacing.base,\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography } from '@material-ui/core';\n\nimport {\n  DROPDOWN_INPUT_LABEL,\n  DROPDOWN_TITLE,\n  SHOW_BUTTON_LABEL,\n} from '../../globals/constants';\nimport { useStyles } from './Dropdown.style';\n\nfunction Dropdown({\n  countries,\n  handleCountrySelect,\n  handleShow,\n  selectedCountries,\n}) {\n  const classes = useStyles();\n  const checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n  const icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\n\n  return (\n    <div className={classes.dropdownContainer}>\n      <div className={classes.dropdownTitleWrapper}>\n        <Typography variant=\"h5\">{DROPDOWN_TITLE}</Typography>\n      </div>\n      <div className={classes.dropdownWrapper}>\n        <Autocomplete\n          autoHighlight\n          className={classes.dropdown}\n          disableCloseOnSelect\n          getOptionLabel={option => option.name}\n          getOptionSelected={(option, values) => option.name === values.name}\n          multiple\n          onChange={(event, value) => handleCountrySelect(value)}\n          options={countries}\n          renderInput={params => (\n            <TextField\n              {...params}\n              label={DROPDOWN_INPUT_LABEL}\n              placeholder=\"Favorites\"\n              variant=\"outlined\"\n            />\n          )}\n          renderOption={(option, { selected }) => (\n            <>\n              <Checkbox\n                checked={selected}\n                checkedIcon={checkedIcon}\n                icon={icon}\n                style={{ marginRight: 8 }}\n              />\n              {option.name}\n            </>\n          )}\n          value={selectedCountries}\n        />\n      </div>\n      <div className={classes.buttonWrapper}>\n        <Button\n          color=\"primary\"\n          disabled={!selectedCountries.length}\n          onClick={e => handleShow(e)}\n          variant=\"contained\"\n        >\n          {SHOW_BUTTON_LABEL}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nDropdown.propTypes = {\n  countries: PropTypes.array.isRequired,\n  handleCountrySelect: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n  selectedCountries: PropTypes.array.isRequired,\n};\n\nexport default Dropdown;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  loaderContainer: {\n    textAlign: 'center',\n    marginTop: '35vh',\n    minHeight: 200,\n  },\n});\n","import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { useStyles } from './Loader.style';\n\nfunction Loader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.loaderContainer}>\n      <CircularProgress size={60} thickness={4} />\n    </div>\n  );\n}\n\nexport default Loader;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  cardContainer: {\n    backgroundColor: theme.color.cardBackgroundColor,\n    margin: theme.customSpacing.small,\n  },\n  caseWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: theme.customSpacing.base,\n    marginTop: theme.customSpacing.small,\n  },\n  dataWrapper: {\n    marginLeft: theme.customSpacing.base,\n  },\n  newCasesWrapper: {\n    backgroundColor: theme.color.newCasesBackgroundColor,\n    borderRadius: theme.border.borderRadius.base,\n    color: theme.color.newCasesTextColor,\n    padding: `0 ${theme.customSpacing.xSmall}`,\n  },\n  deathDataWrapper: {\n    backgroundColor: theme.color.newDeathBackgroundColor,\n    borderRadius: theme.border.borderRadius.base,\n    color: theme.color.newDeathTextColor,\n    padding: `0 ${theme.customSpacing.xSmall}`,\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { CASE_OPTION } from '../../globals/constants';\nimport { useStyles } from './CountryCard.style';\n\nfunction CountryCard({ country, filterData }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.cardContainer} variant=\"outlined\">\n      <CardContent>\n        <div>\n          <Typography variant=\"h6\">{country.name}</Typography>\n        </div>\n        {filterData.map(filter =>\n          filter.checked ? (\n            <div className={classes.caseWrapper} key={filter.name}>\n              <div>\n                <Typography variant=\"subtitle2\">{`${filter.title}:`}</Typography>\n              </div>\n              <div\n                className={`${classes.dataWrapper} ${\n                  filter.name === CASE_OPTION.newCases\n                    ? classes.newCasesWrapper\n                    : ''\n                } ${\n                  filter.name === CASE_OPTION.newDeaths\n                    ? classes.deathDataWrapper\n                    : ''\n                }`}\n              >\n                <Typography variant=\"subtitle1\">\n                  {country[filter.name]}\n                </Typography>\n              </div>\n            </div>\n          ) : null\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nCountryCard.propTypes = {\n  country: PropTypes.object.isRequired,\n  filterData: PropTypes.array.isRequired,\n};\n\nexport default CountryCard;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  showDataContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: theme.customSpacing.base,\n    padding: `0 ${theme.customSpacing.small} ${theme.customSpacing.large}`,\n  },\n  showDataTitleWrapper: {\n    textAlign: 'center',\n  },\n  filtersIconWrapper: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    marginTop: theme.customSpacing.base,\n  },\n  dataWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.customSpacing.base,\n  },\n  cardWrapper: {\n    display: 'flex',\n    flexFlow: 'wrap',\n    justifyContent: 'space-around',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Typography } from '@material-ui/core';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport CountryCard from '../CountryCard';\nimport {\n  EDIT_ICON_TOOLTIP_TITLE,\n  SHOWDATA_TITLE,\n} from '../../globals/constants';\nimport { useStyles } from './ShowDataComponent.style';\n\nfunction ShowDataComponent({\n  countriesToShow,\n  filterData,\n  handleCheckboxChange,\n  handleShow,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.showDataContainer}>\n      <div className={classes.showDataTitleWrapper}>\n        <Typography variant=\"h5\">\n          {countriesToShow.length > 1\n            ? SHOWDATA_TITLE.multi\n            : SHOWDATA_TITLE.single}\n        </Typography>\n      </div>\n      <div className={classes.filtersIconWrapper}>\n        <div>\n          <FormGroup row>\n            {filterData.map(data => (\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    checked={data.checked}\n                    onChange={() => handleCheckboxChange(data.name)}\n                    size=\"small\"\n                  />\n                )}\n                key={data.name}\n                label={data.title}\n              />\n            ))}\n          </FormGroup>\n        </div>\n        <div>\n          <Tooltip title={EDIT_ICON_TOOLTIP_TITLE} TransitionComponent={Zoom}>\n            <IconButton onClick={handleShow}>\n              <CreateIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n      <div className={classes.dataWrapper}>\n        <div className={classes.cardWrapper}>\n          {countriesToShow.map(country => (\n            <CountryCard\n              country={country}\n              filterData={filterData}\n              key={country.name}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nShowDataComponent.propTypes = {\n  countriesToShow: PropTypes.array.isRequired,\n  filterData: PropTypes.array.isRequired,\n  handleCheckboxChange: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n};\n\nexport default ShowDataComponent;\n","import React, { useEffect, useState } from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport API from '../../fetchAPI';\nimport { convertDate } from '../../helpers/convertDate';\nimport { darkTheme, lightTheme } from '../../theme/theme';\nimport Header from '../../components/Header';\nimport { loadState, saveState } from '../../helpers/localStorage';\nimport { FILTER_OPTIONS, LOCAL_STORAGE } from '../../globals/constants';\n\nimport { useStyles } from './Main.style';\nimport Dropdown from '../../components/Dropdown';\nimport Loader from '../../components/Loader';\nimport ShowDataComponent from '../../components/ShowDataComponent';\n\nfunction Main() {\n  const classes = useStyles();\n  const [darkMode, setDarkMode] = useState(\n    loadState(LOCAL_STORAGE.darkMode) || false\n  );\n  const theme = darkMode ? darkTheme : lightTheme;\n  const [countries, setCountries] = useState([]);\n  const [coronaData, setCoronaData] = useState([]);\n  const [countriesToShow, setCountriesToShow] = useState([]);\n  const [isEdit, setIsEdit] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const filtersFromLocalStorage = loadState(LOCAL_STORAGE.filters);\n  const filterOptions = filtersFromLocalStorage\n    ? filtersFromLocalStorage.map((filter, index) =>\n        filter.title === FILTER_OPTIONS[index].title &&\n        filter.name === FILTER_OPTIONS[index].name\n          ? filter\n          : FILTER_OPTIONS[index]\n      )\n    : FILTER_OPTIONS;\n  const [filterData, setFilterData] = useState(filterOptions);\n  const [selectedCountries, setSelectedCountries] = useState([]);\n\n  const getData = async () => {\n    try {\n      const coronaResponse = await API.getCoronaData();\n      const countriesArray = await coronaResponse\n        .slice(1, -1)\n        .map(data => ({ name: data.Country_text }));\n      const sortedCountries = [...countriesArray].sort((a, b) => {\n        if (a.name < b.name) {\n          return -1;\n        }\n        if (a.name > b.name) {\n          return 1;\n        }\n        return 0;\n      });\n\n      setCountries(sortedCountries);\n      setCoronaData(coronaResponse);\n\n      const selectedCountriesFromLocalStorage = loadState(\n        LOCAL_STORAGE.selectedCountries\n      );\n\n      if (\n        selectedCountriesFromLocalStorage &&\n        selectedCountriesFromLocalStorage.length\n      ) {\n        setSelectedCountries(selectedCountriesFromLocalStorage);\n\n        setIsEdit(!isEdit);\n      }\n    } catch (e) {\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    const filteredCountries = selectedCountries.map(country =>\n      coronaData.find(data => data.Country_text === country.name)\n    );\n    const mappedCountries = filteredCountries.map(country => ({\n      activeCases: country['Active Cases_text'],\n      name: country.Country_text,\n      newCases: country['New Cases_text'],\n      newDeaths: country['New Deaths_text'],\n      updateDate: convertDate(country['Last Update']),\n    }));\n\n    setCountriesToShow(mappedCountries);\n  }, [selectedCountries]);\n\n  const handleDarkMode = () => {\n    setDarkMode(!darkMode);\n\n    saveState(LOCAL_STORAGE.darkMode, !darkMode);\n  };\n\n  const handleCountrySelect = countriesArray => {\n    setSelectedCountries(countriesArray);\n\n    saveState(LOCAL_STORAGE.selectedCountries, countriesArray);\n  };\n\n  const handleShow = event => {\n    event.preventDefault();\n\n    setIsEdit(!isEdit);\n  };\n\n  const handleCheckboxChange = name => {\n    const newFilters = filterData.map(filter =>\n      filter.name === name\n        ? {\n            ...filter,\n            checked: !filter.checked,\n          }\n        : filter\n    );\n\n    setFilterData(newFilters);\n    saveState(LOCAL_STORAGE.filters, newFilters);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className={classes.paper} square>\n        <Header darkMode={darkMode} handleDarkMode={handleDarkMode} />\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <div>\n            {isEdit ? (\n              <Dropdown\n                countries={countries}\n                handleCountrySelect={handleCountrySelect}\n                handleShow={handleShow}\n                selectedCountries={selectedCountries}\n              />\n            ) : (\n              <ShowDataComponent\n                countriesToShow={countriesToShow}\n                filterData={filterData}\n                handleCheckboxChange={handleCheckboxChange}\n                handleShow={handleShow}\n              />\n            )}\n          </div>\n        )}\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './pages/Main';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}