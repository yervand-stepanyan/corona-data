{"version":3,"sources":["fetchAPI/fetchAPI.js","assets/images/corona-logo_260x260.png","globals/constants.js","helpers/createCountryList.js","theme/theme.js","components/Dropdown/Dropdown.style.js","components/Dropdown/Dropdown.js","components/Header/Header.style.js","components/Header/Header.js","components/Loader/Loader.style.js","components/Loader/Loader.js","helpers/localStorage.js","helpers/normalizeDate.js","helpers/checkIsNumber.js","components/CountryCard/CountryCard.style.js","components/CountryCard/CountryCard.js","components/ShowDataComponent/ShowDataComponent.style.js","components/ShowDataComponent/ShowDataComponent.js","helpers/sortCountries.js","pages/Main/Main.style.js","pages/Main/Main.js","helpers/checkOptionNameChange.js","helpers/filterCountries.js","helpers/normalizeCountries.js","index.js"],"names":["coronaURL","process","a","url","method","body","fetchData","JSON","stringify","headers","fetch","response","json","API","getCoronaData","request","OPTIONS","checked","name","title","CASE_OPTION","LOCAL_STORAGE","LOGO","src","logo","NOT_AVAILABLE","SHOWDATA_TITLE","createCountryList","array","Array","isArray","length","slice","map","data","Country_text","lightTheme","createMuiTheme","border","borderRadius","base","cardWidth","color","backgroundColor","cardBackgroundColor","newCasesBackgroundColor","newCasesTextColor","newDeathBackgroundColor","newDeathTextColor","textColor","customSpacing","small","MAIN_SPACING_VALUE","smaller","large","xLarge","logoSize","optionHeight","darkTheme","palette","type","background","paper","useStyles","makeStyles","theme","dropdownContainer","display","alignItems","flexDirection","marginTop","padding","dropdownTitleWrapper","textAlign","dropdownWrapper","justifyContent","width","dropdown","buttonWrapper","Dropdown","countries","handleCountrySelect","handleShow","selectedCountries","classes","checkedIcon","fontSize","icon","className","Typography","variant","Autocomplete","autoHighlight","disableCloseOnSelect","getOptionLabel","option","getOptionSelected","values","multiple","onChange","event","value","options","renderInput","params","TextField","label","placeholder","renderOption","selected","Checkbox","style","marginRight","Button","disabled","onClick","e","header","logoIconContainer","logoTitleWrapper","logoWrapper","height","titleWrapper","marginLeft","Header","darkMode","handleDarkMode","AppBar","position","Toolbar","alt","IconButton","Brightness7","Brightness2","loaderContainer","minHeight","Loader","CircularProgress","size","thickness","loadState","stateName","serializedState","localStorage","getItem","parse","err","saveState","setItem","Error","normalizeDate","date","dateAndTime","split","dateData","dateToShow","checkIsNumber","string","Number","isInteger","cardContainer","margin","minWidth","contentWrapper","optionsWrapper","dataWrapper","optionItemWrapper","marginBottom","dataItemWrapper","newCasesWrapper","boxSizing","deathsDataWrapper","CountryCard","countryData","Card","CardContent","showDataContainer","showDataTitleWrapper","filtersIconWrapper","cardWrapper","flexFlow","ShowDataComponent","countriesDataToShow","handleOptionChange","FormGroup","row","FormControlLabel","control","Switch","Tooltip","TransitionComponent","Zoom","sortCountries","sort","b","cursor","Main","useState","setDarkMode","setCountries","coronaData","setCoronaData","setCountriesDataToShow","isEdit","setIsEdit","isLoading","setIsLoading","optionsFromLocalStorage","fixedOptions","filter","index","setOptions","setSelectedCountries","getData","coronaResponse","countriesArray","sortedCountries","selectedCountriesFromLocalStorage","useEffect","arrayToCheck","arrayCheckFrom","normalizedCountries","country","activeCases","newCases","newDeaths","updateDate","normalizeCountries","find","preventDefault","ThemeProvider","Paper","square","changedOptions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92ba1fac.chunk.js","sourcesContent":["const coronaURL = `${process.env.REACT_APP_ROOT_API}${process.env.REACT_APP_PARAMS}${process.env.REACT_APP_RAPIDAPI_KEY}`;\n\nasync function request({ url, method, body }) {\n  const fetchData = body\n    ? {\n        body: JSON.stringify(body) || '',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method,\n      }\n    : {\n        method,\n      };\n\n  const response = await fetch(url, fetchData);\n\n  return response.json();\n}\n\nconst API = {\n  getCoronaData: () => request({ url: coronaURL, method: 'GET' }),\n};\n\nexport default API;\n","export default __webpack_public_path__ + \"static/media/corona-logo_260x260.0d91d905.png\";","import logo from '../assets/images/corona-logo_260x260.png';\n\nexport const DROPDOWN_INPUT_LABEL = 'Countries';\nexport const DROPDOWN_TITLE = 'Select at least one country';\nexport const EDIT_ICON_TOOLTIP_TITLE = 'Edit countries';\nexport const OPTIONS = [\n  {\n    checked: true,\n    name: 'newCases',\n    title: 'New cases',\n  },\n  {\n    checked: false,\n    name: 'newDeaths',\n    title: 'New deaths',\n  },\n  {\n    checked: false,\n    name: 'activeCases',\n    title: 'Active cases',\n  },\n  {\n    checked: true,\n    name: 'updateDate',\n    title: 'Last updated',\n  },\n];\nexport const CASE_OPTION = {\n  newCases: OPTIONS[0].name,\n  newDeaths: OPTIONS[1].name,\n  activeCases: OPTIONS[2].name,\n  updateDate: OPTIONS[3].name,\n};\nexport const LOCAL_STORAGE = {\n  darkMode: 'darkMode',\n  options: 'options',\n  selectedCountries: 'selectedCountries',\n};\nexport const LOGO = {\n  src: logo,\n  title: 'logo',\n};\nexport const NOT_AVAILABLE = 'N/A';\nexport const SHOW_BUTTON_LABEL = 'Save & Show';\nexport const SHOWDATA_TITLE = {\n  single: 'Data for selected country',\n  multi: 'Data for selected countries',\n};\nexport const TITLE = 'Corona Data';\n","export const createCountryList = array => {\n  if (Array.isArray(array) && array.length > 2) {\n    return array.slice(1, -1).map(data => ({ name: data.Country_text }));\n  }\n\n  return array;\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nconst CARD_WIDTH = 298;\nconst LOGO_SIZE = 40;\nconst MAIN_BORDER_RADIUS_VALUE = 4;\nconst MAIN_SPACING_VALUE = 16;\nconst OPTION_HEIGHT = 28;\n\nconst cardBackgroundColorDark = '#2d2d2d';\nconst cardBackgroundColorLight = '#F5F5F5';\nconst headerBackgroundColorDark = '#333333';\nconst headerBackgroundColorLight = '#ffffff';\nconst headerTextColorDark = '#ffffff';\nconst headerTextColorLight = '#191919';\nconst newCasesBackgroundColor = '#FFEEAA';\nconst newCasesTextColor = '#212121';\nconst newDeathBackgroundColor = '#FF0000';\nconst newDeathTextColor = '#ffffff';\nconst paperBackgroundColorDark = '#212121';\n\nexport const lightTheme = createMuiTheme({\n  border: {\n    borderRadius: {\n      base: `${MAIN_BORDER_RADIUS_VALUE}px`,\n    },\n  },\n  cardWidth: `${CARD_WIDTH}px`,\n  color: {\n    backgroundColor: headerBackgroundColorLight,\n    cardBackgroundColor: cardBackgroundColorLight,\n    newCasesBackgroundColor,\n    newCasesTextColor,\n    newDeathBackgroundColor,\n    newDeathTextColor,\n    textColor: headerTextColorLight,\n  },\n  customSpacing: {\n    small: `${MAIN_SPACING_VALUE / 2}px`,\n    smaller: `${(MAIN_SPACING_VALUE * 3) / 4}px`,\n    base: `${MAIN_SPACING_VALUE}px`,\n    large: `${MAIN_SPACING_VALUE * 2}px`,\n    xLarge: `${MAIN_SPACING_VALUE * 3}px`,\n  },\n  logoSize: `${LOGO_SIZE}px`,\n  optionHeight: `${OPTION_HEIGHT}px`,\n});\n\nexport const darkTheme = createMuiTheme({\n  ...lightTheme,\n  palette: {\n    type: 'dark',\n    background: {\n      paper: paperBackgroundColorDark,\n    },\n  },\n  color: {\n    ...lightTheme.color,\n    backgroundColor: headerBackgroundColorDark,\n    cardBackgroundColor: cardBackgroundColorDark,\n    textColor: headerTextColorDark,\n  },\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  dropdownContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    marginTop: theme.customSpacing.base,\n    padding: `0 ${theme.customSpacing.small} ${theme.customSpacing.large}`,\n  },\n  dropdownTitleWrapper: {\n    textAlign: 'center',\n  },\n  dropdownWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.customSpacing.base,\n    width: '90%',\n    '@media only screen and (min-width: 600px)': {\n      width: '60%',\n    },\n    '@media only screen and (min-width: 768px)': {\n      width: '50%',\n    },\n    '@media only screen and (min-width: 992px)': {\n      width: '40%',\n    },\n  },\n  dropdown: {\n    width: '100%',\n  },\n  buttonWrapper: {\n    marginTop: theme.customSpacing.base,\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography } from '@material-ui/core';\n\nimport {\n  DROPDOWN_INPUT_LABEL,\n  DROPDOWN_TITLE,\n  SHOW_BUTTON_LABEL,\n} from '../../globals/constants';\nimport { useStyles } from './Dropdown.style';\n\nfunction Dropdown({\n  countries,\n  handleCountrySelect,\n  handleShow,\n  selectedCountries,\n}) {\n  const classes = useStyles();\n  const checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n  const icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\n\n  return (\n    <div className={classes.dropdownContainer}>\n      <div className={classes.dropdownTitleWrapper}>\n        <Typography variant=\"h5\">{DROPDOWN_TITLE}</Typography>\n      </div>\n      <div className={classes.dropdownWrapper}>\n        <Autocomplete\n          autoHighlight\n          className={classes.dropdown}\n          disableCloseOnSelect\n          getOptionLabel={option => option.name}\n          getOptionSelected={(option, values) => option.name === values.name}\n          multiple\n          onChange={(event, value) => handleCountrySelect(value)}\n          options={countries}\n          renderInput={params => (\n            <TextField\n              {...params}\n              label={DROPDOWN_INPUT_LABEL}\n              placeholder=\"Favorites\"\n              variant=\"outlined\"\n            />\n          )}\n          renderOption={(option, { selected }) => (\n            <>\n              <Checkbox\n                checked={selected}\n                checkedIcon={checkedIcon}\n                icon={icon}\n                style={{ marginRight: 8 }}\n              />\n              {option.name}\n            </>\n          )}\n          value={selectedCountries}\n        />\n      </div>\n      <div className={classes.buttonWrapper}>\n        <Button\n          color=\"primary\"\n          disabled={!selectedCountries.length}\n          onClick={e => handleShow(e)}\n          variant=\"contained\"\n        >\n          {SHOW_BUTTON_LABEL}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nDropdown.propTypes = {\n  countries: PropTypes.array.isRequired,\n  handleCountrySelect: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n  selectedCountries: PropTypes.array.isRequired,\n};\n\nexport default Dropdown;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  header: {\n    backgroundColor: theme.color.backgroundColor,\n    color: theme.color.textColor,\n  },\n  logoIconContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  logoTitleWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: `0 ${theme.customSpacing.smaller}`,\n  },\n  logoWrapper: {\n    display: 'flex',\n  },\n  logo: {\n    height: theme.logoSize,\n    width: theme.logoSize,\n  },\n  titleWrapper: {\n    marginLeft: theme.customSpacing.base,\n  },\n  icon: {\n    color: theme.color.textColor,\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport { Brightness2, Brightness7 } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { LOGO, TITLE } from '../../globals/constants';\nimport { useStyles } from './Header.style';\n\nfunction Header({ darkMode, handleDarkMode }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar className={classes.header} position=\"static\">\n        <Toolbar>\n          <div className={classes.logoIconContainer}>\n            <div className={classes.logoTitleWrapper}>\n              <div className={classes.logoWrapper}>\n                <img alt={LOGO.title} className={classes.logo} src={LOGO.src} />\n              </div>\n              <div className={classes.titleWrapper}>\n                <Typography variant=\"h6\">{TITLE}</Typography>\n              </div>\n            </div>\n            <div>\n              {darkMode ? (\n                <IconButton className={classes.icon} onClick={handleDarkMode}>\n                  <Brightness7 />\n                </IconButton>\n              ) : (\n                <IconButton className={classes.icon} onClick={handleDarkMode}>\n                  <Brightness2 />\n                </IconButton>\n              )}\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  darkMode: PropTypes.bool.isRequired,\n  handleDarkMode: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  loaderContainer: {\n    textAlign: 'center',\n    marginTop: '35vh',\n    minHeight: 200,\n  },\n});\n","import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { useStyles } from './Loader.style';\n\nfunction Loader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.loaderContainer}>\n      <CircularProgress size={60} thickness={4} />\n    </div>\n  );\n}\n\nexport default Loader;\n","export const loadState = stateName => {\n  try {\n    const serializedState = localStorage.getItem(stateName);\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (stateName, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n\n    localStorage.setItem(stateName, serializedState);\n  } catch (err) {\n    throw new Error(\"Can't save changes in local storage\");\n  }\n};\n","export const normalizeDate = date => {\n  if (date) {\n    const dateAndTime = date.split(' ');\n    const dateData = dateAndTime[0].split('-');\n    const dateToShow = `${dateData[2]}/${dateData[1]}/${dateData[0]}`;\n\n    return `${dateAndTime[1]} ${dateToShow}`;\n  }\n  return date;\n};\n","export const checkIsNumber = string => {\n  if (string) {\n    return Number.isInteger(+string[string.length - 1]);\n  }\n  return string;\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  cardContainer: {\n    backgroundColor: theme.color.cardBackgroundColor,\n    margin: theme.customSpacing.small,\n    minWidth: theme.cardWidth,\n  },\n  contentWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.customSpacing.small,\n    padding: `0 ${theme.customSpacing.base}`,\n  },\n  optionsWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '50%',\n  },\n  dataWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '50%',\n  },\n  optionItemWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    height: theme.optionHeight,\n    marginBottom: theme.customSpacing.small,\n  },\n  dataItemWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    height: theme.optionHeight,\n    marginBottom: theme.customSpacing.small,\n  },\n  newCasesWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    backgroundColor: theme.color.newCasesBackgroundColor,\n    borderRadius: theme.border.borderRadius.base,\n    boxSizing: 'border-box',\n    color: theme.color.newCasesTextColor,\n    padding: `0 ${theme.customSpacing.small}`,\n    width: '100%',\n  },\n  deathsDataWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    backgroundColor: theme.color.newDeathBackgroundColor,\n    borderRadius: theme.border.borderRadius.base,\n    boxSizing: 'border-box',\n    color: theme.color.newDeathTextColor,\n    padding: `0 ${theme.customSpacing.small}`,\n    width: '100%',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { CASE_OPTION } from '../../globals/constants';\nimport { checkIsNumber } from '../../helpers/checkIsNumber';\nimport { useStyles } from './CountryCard.style';\n\nfunction CountryCard({ countryData, options }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.cardContainer} variant=\"outlined\">\n      <CardContent>\n        <div>\n          <div>\n            <Typography variant=\"h6\">{countryData.name}</Typography>\n          </div>\n        </div>\n        <div className={classes.contentWrapper}>\n          <div className={classes.optionsWrapper}>\n            {options.map(option =>\n              option.checked ? (\n                <div className={classes.optionItemWrapper} key={option.name}>\n                  <Typography variant=\"subtitle2\">{`${option.title}:`}</Typography>\n                </div>\n              ) : null\n            )}\n          </div>\n          <div className={classes.dataWrapper}>\n            {options.map(option =>\n              option.checked ? (\n                <div\n                  className={`${classes.dataItemWrapper} ${\n                    option.name === CASE_OPTION.newCases &&\n                    checkIsNumber(countryData[option.name])\n                      ? classes.newCasesWrapper\n                      : ''\n                  } ${\n                    option.name === CASE_OPTION.newDeaths &&\n                    checkIsNumber(countryData[option.name])\n                      ? classes.deathsDataWrapper\n                      : ''\n                  }`}\n                  key={option.name}\n                >\n                  <Typography\n                    variant={`${\n                      option.name === CASE_OPTION.updateDate\n                        ? 'subtitle2'\n                        : 'subtitle1'\n                    }`}\n                  >\n                    {countryData[option.name]}\n                  </Typography>\n                </div>\n              ) : null\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nCountryCard.propTypes = {\n  countryData: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default CountryCard;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  showDataContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: theme.customSpacing.base,\n    padding: `0 ${theme.customSpacing.small} ${theme.customSpacing.large}`,\n  },\n  showDataTitleWrapper: {\n    textAlign: 'center',\n  },\n  filtersIconWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    marginTop: theme.customSpacing.base,\n    padding: `0 ${theme.customSpacing.small}`,\n  },\n  dataWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.customSpacing.base,\n  },\n  cardWrapper: {\n    display: 'flex',\n    flexFlow: 'wrap',\n    justifyContent: 'space-around',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CreateIcon from '@material-ui/icons/Create';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Typography } from '@material-ui/core';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport CountryCard from '../CountryCard';\nimport {\n  EDIT_ICON_TOOLTIP_TITLE,\n  SHOWDATA_TITLE,\n} from '../../globals/constants';\nimport { useStyles } from './ShowDataComponent.style';\n\nfunction ShowDataComponent({\n  countriesDataToShow,\n  handleOptionChange,\n  handleShow,\n  options,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.showDataContainer}>\n      <div className={classes.showDataTitleWrapper}>\n        <Typography variant=\"h5\">\n          {countriesDataToShow.length > 1\n            ? SHOWDATA_TITLE.multi\n            : SHOWDATA_TITLE.single}\n        </Typography>\n      </div>\n      <div className={classes.filtersIconWrapper}>\n        <div>\n          <FormGroup row>\n            {options.map(option => (\n              <FormControlLabel\n                control={(\n                  <Switch\n                    checked={option.checked}\n                    onChange={() => handleOptionChange(option.name)}\n                    size=\"small\"\n                  />\n                )}\n                key={option.name}\n                label={option.title}\n              />\n            ))}\n          </FormGroup>\n        </div>\n        <div>\n          <Tooltip title={EDIT_ICON_TOOLTIP_TITLE} TransitionComponent={Zoom}>\n            <IconButton onClick={handleShow}>\n              <CreateIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n      <div className={classes.dataWrapper}>\n        <div className={classes.cardWrapper}>\n          {countriesDataToShow.map(countryData => (\n            <CountryCard\n              countryData={countryData}\n              key={countryData.name}\n              options={options}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nShowDataComponent.propTypes = {\n  countriesDataToShow: PropTypes.array.isRequired,\n  handleOptionChange: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default ShowDataComponent;\n","export const sortCountries = array => {\n  if (Array.isArray(array) && array.length > 1) {\n    return [...array].sort((a, b) => {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n  return array;\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  paper: {\n    cursor: 'default',\n    minHeight: '100vh',\n  },\n});\n","import React, { useEffect, useState } from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport API from '../../fetchAPI';\nimport { checkOptionNameChange } from '../../helpers/checkOptionNameChange';\nimport { createCountryList } from '../../helpers/createCountryList';\nimport { darkTheme, lightTheme } from '../../theme/theme';\nimport Dropdown from '../../components/Dropdown';\nimport { filterCountries } from '../../helpers/filterCountries';\nimport Header from '../../components/Header';\nimport { LOCAL_STORAGE } from '../../globals/constants';\nimport Loader from '../../components/Loader';\nimport { loadState, saveState } from '../../helpers/localStorage';\nimport { normalizeCountries } from '../../helpers/normalizeCountries';\nimport ShowDataComponent from '../../components/ShowDataComponent';\nimport { sortCountries } from '../../helpers/sortCountries';\nimport { useStyles } from './Main.style';\n\nfunction Main() {\n  const classes = useStyles();\n  const [darkMode, setDarkMode] = useState(\n    loadState(LOCAL_STORAGE.darkMode) || false\n  );\n  const theme = darkMode ? darkTheme : lightTheme;\n  const [countries, setCountries] = useState([]);\n  const [coronaData, setCoronaData] = useState([]);\n  const [countriesDataToShow, setCountriesDataToShow] = useState([]);\n  const [isEdit, setIsEdit] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const optionsFromLocalStorage = loadState(LOCAL_STORAGE.options);\n  const fixedOptions = checkOptionNameChange(optionsFromLocalStorage);\n  const [options, setOptions] = useState(fixedOptions);\n  const [selectedCountries, setSelectedCountries] = useState([]);\n\n  const getData = async () => {\n    try {\n      const coronaResponse = await API.getCoronaData();\n      const countriesArray = await createCountryList(coronaResponse);\n      const sortedCountries = sortCountries(countriesArray);\n\n      setCountries(sortedCountries);\n      setCoronaData(coronaResponse);\n\n      const selectedCountriesFromLocalStorage = loadState(\n        LOCAL_STORAGE.selectedCountries\n      );\n\n      if (\n        selectedCountriesFromLocalStorage &&\n        selectedCountriesFromLocalStorage.length\n      ) {\n        setSelectedCountries(selectedCountriesFromLocalStorage);\n\n        setIsEdit(!isEdit);\n      }\n    } catch (e) {\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    const filteredCountries = filterCountries(selectedCountries, coronaData);\n    const normalizedCountries = normalizeCountries(filteredCountries);\n\n    setCountriesDataToShow(normalizedCountries);\n  }, [selectedCountries]);\n\n  const handleDarkMode = () => {\n    setDarkMode(!darkMode);\n\n    saveState(LOCAL_STORAGE.darkMode, !darkMode);\n  };\n\n  const handleCountrySelect = countriesArray => {\n    setSelectedCountries(countriesArray);\n\n    saveState(LOCAL_STORAGE.selectedCountries, countriesArray);\n  };\n\n  const handleShow = event => {\n    event.preventDefault();\n\n    setIsEdit(!isEdit);\n  };\n\n  const handleOptionChange = name => {\n    const changedOptions = options.map(option =>\n      option.name === name\n        ? {\n            ...option,\n            checked: !option.checked,\n          }\n        : option\n    );\n\n    setOptions(changedOptions);\n    saveState(LOCAL_STORAGE.options, changedOptions);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className={classes.paper} square>\n        <Header darkMode={darkMode} handleDarkMode={handleDarkMode} />\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <div>\n            {isEdit ? (\n              <Dropdown\n                countries={countries}\n                handleCountrySelect={handleCountrySelect}\n                handleShow={handleShow}\n                selectedCountries={selectedCountries}\n              />\n            ) : (\n              <ShowDataComponent\n                countriesDataToShow={countriesDataToShow}\n                handleOptionChange={handleOptionChange}\n                handleShow={handleShow}\n                options={options}\n              />\n            )}\n          </div>\n        )}\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default Main;\n","import { OPTIONS } from '../globals/constants';\n\nexport const checkOptionNameChange = array => {\n  if (Array.isArray(array) && array.length) {\n    return array.map((filter, index) =>\n      filter.title === OPTIONS[index].title &&\n      filter.name === OPTIONS[index].name\n        ? filter\n        : OPTIONS[index]\n    );\n  }\n  return OPTIONS;\n};\n","export const filterCountries = (arrayToCheck, arrayCheckFrom) => {\n  if (\n    Array.isArray(arrayToCheck) &&\n    Array.isArray(arrayCheckFrom) &&\n    arrayToCheck.length &&\n    arrayCheckFrom.length\n  ) {\n    return arrayToCheck.map(country =>\n      arrayCheckFrom.find(data => data.Country_text === country.name)\n    );\n  }\n  return [];\n};\n","import { normalizeDate } from './normalizeDate';\nimport { NOT_AVAILABLE } from '../globals/constants';\n\nexport const normalizeCountries = array => {\n  if (Array.isArray(array) && array.length) {\n    return array.map(country => ({\n      activeCases: country['Active Cases_text'] || NOT_AVAILABLE,\n      name: country.Country_text || NOT_AVAILABLE,\n      newCases: country['New Cases_text'] || NOT_AVAILABLE,\n      newDeaths: country['New Deaths_text'] || NOT_AVAILABLE,\n      updateDate: normalizeDate(country['Last Update']) || NOT_AVAILABLE,\n    }));\n  }\n  return array;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './pages/Main';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}